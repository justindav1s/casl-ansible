[OSEv3:vars]
# For all group_vars, see ./group_vars/all.yml

# Create an OSEv3 group that contains the master, nodes, etcd, and lb groups.
# The lb group lets Ansible configure HAProxy as the load balancing solution.
# Comment lb out if your load balancer is pre-configured.

ansible_user=ocpadmin
ansible_ssh_user=ocpadmin
ansible_become=yes
openshift_install_examples=true
openshift_deployment_type=openshift-enterprise
openshift_release=v3.9
openshift_master_cluster_method=native
docker_udev_workaround=True
openshift_use_dnsmasq=true

# 52.174.48.230 (dev1-master-lb-publicip)
# 40.68.209.166 (dev1-infra-lb-publicip)
# Addresses for connecting to the OpenShift master nodes
openshift_master_cluster_hostname=ocp.52.174.48.230.nip.io
openshift_master_cluster_public_hostname=ocp.52.174.48.230.nip.io
openshift_master_default_subdomain=apps.40.68.209.166.nip.io


openshift_override_hostname_check=true
osm_use_cockpit=false
os_sdn_network_plugin_name='redhat/openshift-ovs-multitenant'
openshift_master_api_port=443
openshift_master_console_port=443
osm_default_node_selector='region=app'
openshift_disable_check=disk_availability,docker_storage,memory_availability,docker_image_availability,package_version
openshift_cloudprovider_kind=azure

# default selectors for router and registry services
openshift_router_selector='region=infra'
openshift_registry_selector='region=infra'

# Deploy Service Catalog
openshift_enable_service_catalog=true

# template_service_broker_install=false
template_service_broker_selector={"region":"infra"}

# Type of clustering being used by OCP
openshift_master_cluster_method=native

# Enable HTPasswdPasswordIdentityProvider
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]
openshift_master_htpasswd_users={'justin': '$apr1$dCb5zcYj$VbbgLQOfRK0f8W3TSALDP.', 'ocpadmin': '$apr1$vby50oZ2$67qhwukvaUn1g2F6XIzQO0'}

# Setup metrics
openshift_metrics_install_metrics=false
openshift_metrics_start_cluster=true
openshift_metrics_cassandra_storage_type=dynamic
openshift_metrics_hawkular_nodeselector={"region":"infra"}
openshift_metrics_cassandra_nodeselector={"region":"infra"}
openshift_metrics_heapster_nodeselector={"region":"infra"}

# Setup logging
openshift_logging_install_logging=false
openshift_logging_es_pvc_dynamic=True
openshift_logging_fluentd_nodeselector={"logging":"true"}
openshift_logging_es_nodeselector={"region":"infra"}
openshift_logging_kibana_nodeselector={"region":"infra"}
openshift_logging_curator_nodeselector={"region":"infra"}
openshift_master_logging_public_url="https://kibana.apps.40.68.209.166.nip.io"
openshift_logging_master_public_url=https://ocp.52.174.58.245.nip.io:443


# Configure node kubelet arguments. pods-per-core is valid in OpenShift Origin 1.3 or OpenShift Container Platform 3.3 and later.
openshift_node_kubelet_args={'pods-per-core': ['10'], 'max-pods': ['250'], 'image-gc-high-threshold': ['85'], 'image-gc-low-threshold': ['75']}

openshift_hosted_prometheus_deploy=false
openshift_prometheus_namespace=openshift-metrics
openshift_prometheus_node_selector={"region":"infra"}
openshift_prometheus_alertmanager_storage_kind=dynamic
openshift_prometheus_alertbuffer_storage_kind=dynamic
openshift_prometheus_storage_kind=dynamic


[cluster_hosts:children]
OSEv3

[OSEv3:children]
masters
nodes
etcd

[masters:children]
group_masters_azure

[masters:vars]
openshift_node_labels="{'region': 'primary',  'zone': 'default'}"
openshift_schedulable=True

[etcd]
dev1-ocp-master-1
dev1-ocp-master-2
dev1-ocp-master-3

[nodes:children]
masters
group_infra_nodes_azure
group_app_nodes_azure

[infra_hosts:children]
group_infra_nodes_azure

[infra_hosts:vars]
openshift_node_labels="{'region': 'infra', 'zone': 'default'}"
openshift_schedulable=True

[app_hosts:children]
group_app_nodes_azure

[app_hosts:vars]
openshift_node_labels="{'region': 'app',  'zone': 'default'}"
openshift_schedulable=True

[glusterfs]

[group_masters_azure]
[group_infra_nodes_azure]
[group_app_nodes_azure]
